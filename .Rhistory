# load packages
library(ggplot2)
library(ggtree)
library(ggnewscale)
library(phangorn)
library(readxl)
library(bio3d)
library(ggbreak)
library(reshape)
library(tidyverse)
library(ggheatmap)
# Import gene presence matrix
metadata_df <- read_excel("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/metadata.xlsx")
metadata_df <- metadata_df[, -c(2:24)]
metadata_df <- t(metadata_df)
colnames(metadata_df) <- metadata_df[1,]
metadata_df <- metadata_df[-1,]
metadata_df <- tibble::rownames_to_column(as.data.frame(metadata_df), "gene")
# Shuffle the columns to simulate the order of sequencing
set.seed(32)
shuffled_columns <- sample(colnames(metadata_df)[-1])
shuffled_df <- metadata_df %>% select(c("gene", all_of(shuffled_columns)))
# Initialize variables to track new genes
cumulative_new_genes <- numeric()
unique_genes <- character()
for (genome in shuffled_columns) {
new_genes <- setdiff(shuffled_df$gene[shuffled_df[[genome]] == 1], unique_genes)
unique_genes <- union(unique_genes, new_genes)
cumulative_new_genes <- c(cumulative_new_genes, length(new_genes))
}
# Plot
plot_data <- data.frame(
Number_of_Genomes = 1:length(cumulative_new_genes),
Number_of_New_Genes = cumulative_new_genes)
plot <- ggplot(plot_data, aes(x = Number_of_Genomes, y = Number_of_New_Genes)) +
geom_point(size= 1, color="black") +
geom_line(color="black") +
scale_x_cut(108, which = c(1,2), scales=c(1, 0.9), space = 0.2) +
scale_y_continuous(expand = c(0, 0)) +
labs(x = "Number of Genomes", y = "Number of New Genes") +
theme_classic() +
theme(axis.text = element_text(color="black", size = 12),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(hjust = 0.5),
axis.labels = element_text(size = 12))
plot
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/genes_per_seq_genome.png", plot, width = 4.5, height = 3, dpi = 300, units = "in")
# Plot
plot_data <- data.frame(
Number_of_Genomes = 1:length(cumulative_new_genes),
Number_of_New_Genes = cumulative_new_genes)
plot <- ggplot(plot_data, aes(x = Number_of_Genomes, y = Number_of_New_Genes)) +
geom_point(size= 1, color="black") +
geom_line(color="black") +
scale_x_cut(108, which = c(1,2), scales=c(1, 0.9), space = 0.2) +
scale_y_continuous(expand = c(0, 0)) +
labs(x = "Number of Genomes", y = "Number of New Genes") +
theme_classic() +
theme(axis.text = element_text(color = "black", size = 12),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(hjust = 0.5),
axis.title = element_text(size = 12))
plot
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/genes_per_seq_genome.png", plot, width = 4.5, height = 3, dpi = 300, units = "in")
plot <- ggplot(plot_data, aes(x = Number_of_Genomes, y = Number_of_New_Genes)) +
geom_point(size= 1, color="black") +
geom_line(color="black") +
scale_x_cut(108, which = c(1,2), scales=c(1, 0.9), space = 0.2) +
scale_y_continuous(limits = c(0, 225),expand = c(0, 0)) +
labs(x = "Number of Genomes", y = "Number of New Genes") +
theme_classic() +
theme(axis.text = element_text(color = "black", size = 12),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(hjust = 0.5),
axis.title = element_text(size = 12))
plot
plot <- ggplot(plot_data, aes(x = Number_of_Genomes, y = Number_of_New_Genes)) +
geom_point(size= 1, color="black") +
geom_line(color="black") +
scale_x_cut(108, which = c(1,2), scales=c(1, 0.9), space = 0.2) +
scale_y_continuous(limits = c(0, 220),expand = c(0, 0)) +
labs(x = "Number of Genomes", y = "Number of New Genes") +
theme_classic() +
theme(axis.text = element_text(color = "black", size = 12),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(hjust = 0.5),
axis.title = element_text(size = 12))
plot
plot <- ggplot(plot_data, aes(x = Number_of_Genomes, y = Number_of_New_Genes)) +
geom_point(size= 1, color="black") +
geom_line(color="black") +
scale_x_cut(108, which = c(1,2), scales=c(1, 0.9), space = 0.2) +
scale_y_continuous(limits = c(0, 215),expand = c(0, 0)) +
labs(x = "Number of Genomes", y = "Number of New Genes") +
theme_classic() +
theme(axis.text = element_text(color = "black", size = 12),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(hjust = 0.5),
axis.title = element_text(size = 12))
plot
plot <- ggplot(plot_data, aes(x = Number_of_Genomes, y = Number_of_New_Genes)) +
geom_point(size= 1, color="black") +
geom_line(color="black") +
scale_x_cut(108, which = c(1,2), scales=c(1, 0.9), space = 0.2) +
scale_y_continuous(limits = c(0, 215),expand = c(0, 0)) +
labs(x = "Number of Genomes", y = "Number of New Genes") +
theme_classic() +
theme(axis.text = element_text(color = "black", size = 10),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(hjust = 0.5),
axis.title = element_text(size = 12))
plot
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/genes_per_seq_genome.png", plot, width = 4.5, height = 3, dpi = 300, units = "in")
# Import B-gal activity
df_activity <- read_xlsx("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/BACTH/B-gal/all_bs_bgal.xlsx")
# Import B-gal activity
df_activity <- read_xlsx("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/BACTH/B-gal/all_bs_bgal.xlsx")
# Import B-gal activity
df_activity <- read_xlsx("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/BACTH/B-gal/all_bs_bgal.xlsx")
# Calculate mean and SEM of B-gal activity for each transformation
activity <- df_activity %>%
group_by(transformation) %>%
summarize(mean_B_gal_activity = mean(B_gal_activity),
sem_B_gal_activity  = sd(B_gal_activity) / sqrt(n()),
.groups = "drop") %>%
mutate(species = ifelse(transformation %in% c(1,2,3,9,10,11), "B. subtilis", "P. polymyxa"),
protein = ifelse(transformation %in% 1:8, "Spo0A", "Spo0F"),
transformation = factor(sort(as.numeric(transformation))),
protein = factor(protein, levels = c("Spo0F", "Spo0A")))
# Spo0F statistics
anova_spo0F <- aov(B_gal_activity ~ as.factor(transformation),
data = df_activity %>% filter(transformation %in% c(9, 10, 11)))
tukey_spo0F <- TukeyHSD(anova_spo0F)
print(tukey_spo0F)
# Spo0A statistics
anova_spo0A <- aov(B_gal_activity ~ as.factor(transformation),
data = df_activity %>% filter(transformation %in% c(1, 2, 3)))
tukey_spo0A <- TukeyHSD(anova_spo0A)
print(tukey_spo0A)
# Plotting function
plot_activity <- function(df, colors, x_labels, protein_name) {
max_y <- max(df$mean_B_gal_activity + df$sem_B_gal_activity)
ggplot(df, aes(x = transformation, y = mean_B_gal_activity, fill = transformation)) +
geom_col() +
geom_errorbar(
aes(ymin = mean_B_gal_activity - sem_B_gal_activity,
ymax = mean_B_gal_activity + sem_B_gal_activity),
width = 0.2) +
scale_fill_manual(values = colors) +
scale_y_continuous(expand = expansion(mult = 0)) +
scale_x_discrete(labels = x_labels) +
coord_cartesian(ylim = c(0, max_y * 1.1)) +
ylab("Miller units") +
theme_classic() +
theme(
text = element_text(size = 12),
legend.position = "none",
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank()) +
# Annotate
annotate("segment", x = 0.6, xend = 2.4, y = max_y * 1.03, yend = max_y * 1.03, size = 1) +
annotate("text", x = 1.5, y = max_y * 1.06, label = paste0(protein_name, "-T25"), size = 3.5) +
annotate("segment", x = 2.6, xend = 3.4, y = max_y * 1.03, yend = max_y * 1.03, size = 1) +
annotate("text", x = 3, y = max_y * 1.06, label = "T25", size = 3.5)}
#Plot
spo0F_colors <- c("#006400", "gray", "gray")
spo0A_colors <- c("#542788", "gray", "gray")
spo0F_labels <- c("T18-Spo0B", "T18", "T18-Spo0B")
spo0A_labels <- c("Spo0B-T18", "T18", "Spo0B-T18")
p_spo0F <- plot_activity(filter(activity, protein == "Spo0F"), spo0F_colors, spo0F_labels, "Spo0F")
p_spo0A <- plot_activity(filter(activity, protein == "Spo0A"), spo0A_colors, spo0A_labels, "Spo0A") +
theme(axis.title.y = element_blank())
ggplot(df, aes(x = transformation, y = mean_B_gal_activity, fill = transformation)) +
geom_col() +
geom_errorbar(
aes(ymin = mean_B_gal_activity - sem_B_gal_activity,
ymax = mean_B_gal_activity + sem_B_gal_activity),
width = 0.2) +
scale_fill_manual(values = colors) +
scale_y_continuous(expand = expansion(mult = 0)) +
scale_x_discrete(labels = x_labels) +
coord_cartesian(ylim = c(0, max_y * 1.1)) +
ylab("Miller units") +
theme_classic() +
theme(
text = element_text(size = 12),
legend.position = "none",
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank()) +
# Annotate
annotate("segment", x = 0.6, xend = 2.4, y = max_y * 1.03, yend = max_y * 1.03, linewidth = 1) +
annotate("text", x = 1.5, y = max_y * 1.06, label = paste0(protein_name, "-T25"), size = 3.5) +
annotate("segment", x = 2.6, xend = 3.4, y = max_y * 1.03, yend = max_y * 1.03, linewidth = 1) +
annotate("text", x = 3, y = max_y * 1.06, label = "T25", size = 3.5)}
# Plotting function
plot_activity <- function(df, colors, x_labels, protein_name) {
max_y <- max(df$mean_B_gal_activity + df$sem_B_gal_activity)
ggplot(df, aes(x = transformation, y = mean_B_gal_activity, fill = transformation)) +
geom_col() +
geom_errorbar(
aes(ymin = mean_B_gal_activity - sem_B_gal_activity,
ymax = mean_B_gal_activity + sem_B_gal_activity),
width = 0.2) +
scale_fill_manual(values = colors) +
scale_y_continuous(expand = expansion(mult = 0)) +
scale_x_discrete(labels = x_labels) +
coord_cartesian(ylim = c(0, max_y * 1.1)) +
ylab("Miller units") +
theme_classic() +
theme(
text = element_text(size = 12),
legend.position = "none",
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank()) +
# Annotate
annotate("segment", x = 0.6, xend = 2.4, y = max_y * 1.03, yend = max_y * 1.03, linewidth = 1) +
annotate("text", x = 1.5, y = max_y * 1.06, label = paste0(protein_name, "-T25"), size = 3.5) +
annotate("segment", x = 2.6, xend = 3.4, y = max_y * 1.03, yend = max_y * 1.03, linewidth = 1) +
annotate("text", x = 3, y = max_y * 1.06, label = "T25", size = 3.5)}
#Plot
spo0F_colors <- c("#006400", "gray", "gray")
spo0A_colors <- c("#542788", "gray", "gray")
spo0F_labels <- c("T18-Spo0B", "T18", "T18-Spo0B")
spo0A_labels <- c("Spo0B-T18", "T18", "Spo0B-T18")
p_spo0F <- plot_activity(filter(activity, protein == "Spo0F"), spo0F_colors, spo0F_labels, "Spo0F")
p_spo0A <- plot_activity(filter(activity, protein == "Spo0A"), spo0A_colors, spo0A_labels, "Spo0A") +
theme(axis.title.y = element_blank())
combined_plot <- p_spo0F + p_spo0A
combined_plot
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/bsub_bgal_plot.png",combined_plot, dpi = 300, width = 4.5, height = 3.5, units = "in")
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/bsub_bgal_plot.png",combined_plot, dpi = 300, width = 4, height = 3.5, units = "in")
# Plotting function
plot_activity <- function(df, colors, x_labels, protein_name) {
max_y <- max(df$mean_B_gal_activity + df$sem_B_gal_activity)
ggplot(df, aes(x = transformation, y = mean_B_gal_activity, fill = transformation)) +
geom_col() +
geom_errorbar(
aes(ymin = mean_B_gal_activity - sem_B_gal_activity,
ymax = mean_B_gal_activity + sem_B_gal_activity),
width = 0.2) +
scale_fill_manual(values = colors) +
scale_y_continuous(expand = expansion(mult = 0)) +
scale_x_discrete(labels = x_labels) +
coord_cartesian(ylim = c(0, max_y * 1.1)) +
ylab("Miller units") +
theme_classic() +
theme(
text = element_text(size = 12),
legend.position = "none",
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank()) +
# Annotate
annotate("segment", x = 0.6, xend = 2.4, y = max_y * 1.03, yend = max_y * 1.03, linewidth = 1) +
annotate("text", x = 1.5, y = max_y * 1.08, label = paste0(protein_name, "-T25"), size = 3.5) +
annotate("segment", x = 2.6, xend = 3.4, y = max_y * 1.03, yend = max_y * 1.03, linewidth = 1) +
annotate("text", x = 3, y = max_y * 1.08, label = "T25", size = 3.5)}
#Plot
spo0F_colors <- c("#006400", "gray", "gray")
spo0A_colors <- c("#542788", "gray", "gray")
spo0F_labels <- c("T18-Spo0B", "T18", "T18-Spo0B")
spo0A_labels <- c("Spo0B-T18", "T18", "Spo0B-T18")
p_spo0F <- plot_activity(filter(activity, protein == "Spo0F"), spo0F_colors, spo0F_labels, "Spo0F")
p_spo0A <- plot_activity(filter(activity, protein == "Spo0A"), spo0A_colors, spo0A_labels, "Spo0A") +
theme(axis.title.y = element_blank())
combined_plot <- p_spo0F + p_spo0A
combined_plot
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/bsub_bgal_plot.png",combined_plot, dpi = 300, width = 4, height = 3.5, units = "in")
# Plotting function
plot_activity <- function(df, colors, x_labels, protein_name) {
max_y <- max(df$mean_B_gal_activity + df$sem_B_gal_activity)
ggplot(df, aes(x = transformation, y = mean_B_gal_activity, fill = transformation)) +
geom_col() +
geom_errorbar(
aes(ymin = mean_B_gal_activity - sem_B_gal_activity,
ymax = mean_B_gal_activity + sem_B_gal_activity),
width = 0.2) +
scale_fill_manual(values = colors) +
scale_y_continuous(expand = expansion(mult = 0)) +
scale_x_discrete(labels = x_labels) +
coord_cartesian(ylim = c(0, max_y * 1.1)) +
ylab("Miller units") +
theme_classic() +
theme(
text = element_text(size = 12),
legend.position = "none",
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
axis.title.x = element_blank()) +
# Annotate
annotate("segment", x = 0.6, xend = 2.4, y = max_y * 1.03, yend = max_y * 1.03, linewidth = 1) +
annotate("text", x = 1.5, y = max_y * 1.07, label = paste0(protein_name, "-T25"), size = 3.5) +
annotate("segment", x = 2.6, xend = 3.4, y = max_y * 1.03, yend = max_y * 1.03, linewidth = 1) +
annotate("text", x = 3, y = max_y * 1.07, label = "T25", size = 3.5)}
#Plot
spo0F_colors <- c("#006400", "gray", "gray")
spo0A_colors <- c("#542788", "gray", "gray")
spo0F_labels <- c("T18-Spo0B", "T18", "T18-Spo0B")
spo0A_labels <- c("Spo0B-T18", "T18", "Spo0B-T18")
p_spo0F <- plot_activity(filter(activity, protein == "Spo0F"), spo0F_colors, spo0F_labels, "Spo0F")
p_spo0A <- plot_activity(filter(activity, protein == "Spo0A"), spo0A_colors, spo0A_labels, "Spo0A") +
theme(axis.title.y = element_blank())
combined_plot <- p_spo0F + p_spo0A
combined_plot
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/bsub_bgal_plot.png",combined_plot, dpi = 300, width = 4, height = 3.5, units = "in")
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/bsub_bgal_plot.png",combined_plot, dpi = 300, width = 4, height = 3.75, units = "in")
ggsave("~/Library/CloudStorage/Box-Box/Feaga Lab/Cassidy Prince/Bella/Bioinformatics for Paper/bsub_bgal_plot.png",combined_plot, dpi = 300, width = 4.5, height = 3.75, units = "in")
# Spo0F statistics
anova_spo0F <- aov(B_gal_activity ~ as.factor(transformation),
data = df_activity %>% filter(transformation %in% c(9, 10, 11)))
tukey_spo0F <- TukeyHSD(anova_spo0F)
print(tukey_spo0F)
# Spo0A statistics
anova_spo0A <- aov(B_gal_activity ~ as.factor(transformation),
data = df_activity %>% filter(transformation %in% c(1, 2, 3)))
tukey_spo0A <- TukeyHSD(anova_spo0A)
print(tukey_spo0A)
